C51 COMPILER V9.56.0.0   HL                                                                10/17/2023 20:07:12 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE HL
OBJECT MODULE PLACED IN .\Objects\hl.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE hl.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\hl.lst
                    -) TABS(2) OBJECT(.\Objects\hl.obj)

line level    source

   1          #include <STC8.H>
   2          #include <INTRINS.H>
   3          typedef   unsigned char u8;
   4          typedef   unsigned int  u16;
   5          typedef   unsigned long u32;
   6          
   7          
   8          /*************  引脚声明  **************/
   9          sbit LED1=P2^0;  // 定义LED1，低电平有效，指示时间0分钟
  10          sbit LED2=P2^1;  // 定义LED2，低电平有效，指示时间15分钟
  11          sbit LED3=P2^2;  // 定义LED3，低电平有效，指示时间45分钟
  12          sbit LED4=P2^3;  // 定义LED4，低电平有效，指示时间60分钟
  13          sbit LED5=P2^4;  // 定义LED5，低电平有效，指示错误报警
  14          sbit FM  =P2^5;  // 定义蜂鸣器，低电平有效，声音提示
  15          sbit HOT =P2^6;  // 定义发热管输出，高电平有效，加热工作
  16          sbit FAN =P2^7;  // 定义风扇输出，高电平有效，风扇
  17          sbit UL  =P0^0;  // 定义紫外灯，高电平有效，跟加热管同时工作
  18          sbit PA = P3^2; // 定义EC11编码器的A脉冲引脚
  19          sbit PN = P3^3; // 定义EC11编码器开关引脚
  20          sbit PB = P3^4; // 定义EC11编码器的B脉冲引脚
  21          /*************  本地变量声明  **************/
  22          bit power,hotfan;
  23          char dat,tmp;
  24          char tmt;
  25          u16 millisecond,second,time1,time2;
  26          /*************  本地函数声明  **************/
  27          void SysInit();         //系统初始化
  28          void Timer0_Init(void); //定时器0初始化
  29          void Int0_Init(void);   //外部中断0初始化
  30          void Int1_Init(void);   //外部中断0初始化
  31          void fmsound(u8 dt);    //蜂鸣器次数
  32          void Delay100ms(); 
  33          /******************************************/
  34          /********  外部中断0中断服务函数  *********/
  35          void INT0_Isr() interrupt 0
  36          {
  37   1       if(!power)return;
  38   1       if(dat==0)tmt=0; 
  39   1       if(tmt>=2000)dat=0;//超过2秒复位
  40   1       if(PB)dat++;//左转
  41   1       if(!PB)dat--;//右转
  42   1       if(dat>=3) //左转3个脉冲
  43   1       {
  44   2        tmp++;dat=0;
  45   2        if(tmp>3)tmp=3;
  46   2        if(tmp==1)second=900;
  47   2        if(tmp==2)second=2700;  
  48   2        if(tmp==3)second=3600;
  49   2       }
  50   1       if(dat<=-3)//右转3个脉冲 
  51   1       {
  52   2        tmp--;dat=0;
  53   2        if(tmp<-3)tmp=0; 
  54   2        if(tmp==1)second=900;
C51 COMPILER V9.56.0.0   HL                                                                10/17/2023 20:07:12 PAGE 2   

  55   2        if(tmp==2)second=2700;  
  56   2        if(tmp==0)second=0; 
  57   2       }
  58   1      }
  59          /**********  定时器0中断服务函数  *********/
  60          void TM0_Isr() interrupt 1
  61          {
  62   1       millisecond++;time1++;
  63   1       if(millisecond>1000)
  64   1       {
  65   2        if(second>0)second--;
  66   2        millisecond=0;
  67   2       }
  68   1       if(HOT==0&&hotfan==1)//关热管后风扇继续开30秒
  69   1       {
  70   2        time2++;
  71   2        if(time2>30000)
  72   2        {
  73   3         hotfan=0;FAN=0;
  74   3         time2=0;
  75   3        }
  76   2       }
  77   1       if(tmt<=2000)tmt++;
  78   1      }
  79          /********* 外部中断1中断服务函数  *********/
  80          void INT1_Isr() interrupt 2
  81          {
  82   1       time1=0;
  83   1       while(!PN)
  84   1       {
  85   2        if(power==0&&time1>500)//关机状态下按下0.5秒开机
  86   2        {
  87   3         power=1;
  88   3         break;
  89   3        }
  90   2        if(power==1&&time1>3000)//开机状态下按下3秒关机
  91   2        {
  92   3         power=0;second=0;
  93   3         break; 
  94   3        }
  95   2       }   
  96   1      }
  97          /**********  主函数  *****************/
  98          void main()
  99          { 
 100   1       SysInit();
 101   1       while(1)
 102   1       {
 103   2        while(!power);        //等待开机
 104   2        LED1=0;LED2=0;LED3=0;LED4=0;LED5=0;//LED全亮
 105   2        fmsound(1);//蜂鸣器响一声
 106   2        while(second==0);
 107   2        while(power)
 108   2        { 
 109   3         while(second>0&&second<=900)
 110   3         {
 111   4          LED1=1;LED2=0;LED3=1;LED4=1;LED5=1;//亮LED2
 112   4          HOT=1;UL=1;FAN=1;hotfan=1;         //开热管，紫外灯，风扇
 113   4         }
 114   3         while(second>900&&second<=2700)
 115   3         {
 116   4          LED1=1;LED2=1;LED3=0;LED4=1;LED5=1;//亮LED3
C51 COMPILER V9.56.0.0   HL                                                                10/17/2023 20:07:12 PAGE 3   

 117   4          HOT=1;UL=1;FAN=1;hotfan=1;         //开热管，紫外灯，风扇
 118   4         }
 119   3         while(second>2700)
 120   3         {
 121   4          LED1=1;LED2=1;LED3=1;LED4=0;LED5=1;//亮LED4
 122   4          HOT=1;UL=1;FAN=1;hotfan=1;         //开热管，紫外灯，风扇
 123   4         }
 124   3         while(second==0&&power)
 125   3         {
 126   4          LED1=0;LED2=1;LED3=1;LED4=1;LED5=1;//亮LED1
 127   4          HOT=0;UL=0;                        //开热管，紫外灯，风扇
 128   4         }     
 129   3        } 
 130   2        LED1=1;LED2=1;LED3=1;LED4=1;LED5=1;//LED全灭
 131   2        HOT=0;UL=0;                        //关热管，紫外灯
 132   2        fmsound(1);//蜂鸣器响一声   
 133   2       }
 134   1      }
 135          
 136          /***********系统初始化***********/
 137          void SysInit()
 138          {
 139   1       P0M0 = 0Xff;P0M1 = 0X00;
 140   1       P2M0 = 0Xff;P2M1 = 0X00;
 141   1       P3M0 = 0X00;P3M1 = 0X00;
 142   1       P3PU &= ~0x08; 
 143   1       LED1=1;LED2=1;LED3=1;
 144   1       LED4=1;LED5=1;FM=1;
 145   1       HOT=0;FAN=0;UL=0;
 146   1       power=0;hotfan=0;
 147   1       millisecond=0;
 148   1       second=0;time2=0;
 149   1       dat=0;tmp=0;
 150   1       Timer0_Init();
 151   1       Int0_Init();
 152   1       Int1_Init();
 153   1       EA = 1; 
 154   1      }
 155          
 156          
 157          /**********  定时器0初始化函数  *********/
 158          void Timer0_Init(void)    //1毫秒@11.0592MHz
 159          {
 160   1        AUXR |= 0x80; //定时器时钟1T模式
 161   1        TMOD &= 0xF0; //设置定时器模式
 162   1        TL0 = 0xCD;   //设置定时初始值
 163   1        TH0 = 0xD4;   //设置定时初始值
 164   1        TF0 = 0;      //清除TF0标志
 165   1        TR0 = 1;      //定时器0开始计时
 166   1        ET0 = 1;      //使能定时器中断
 167   1        PT0 = 1;      //定时器0高优先级          
 168   1      }
 169          
 170          /**********  外部中断0初始化函数  *********/
 171          void Int0_Init(void)
 172          {
 173   1       IT0=1;//INT0下降沿有效
 174   1       EX0=1;//使能INT0中断
 175   1      }
 176          /**********  外部中断0初始化函数  *********/
 177          void Int1_Init(void)
 178          {
C51 COMPILER V9.56.0.0   HL                                                                10/17/2023 20:07:12 PAGE 4   

 179   1       IT1=1;//INT1下降沿有效
 180   1       EX1=1;//使能INT1中断
 181   1      }
 182          /**********  蜂鸣器  *********/
 183          void fmsound(u8 dt)
 184          {
 185   1       u8 i;
 186   1       for(i=0;i<dt;i++)
 187   1       {
 188   2        FM=0;
 189   2        Delay100ms();
 190   2        FM=1;
 191   2        Delay100ms(); 
 192   2       }
 193   1      }
 194          /**********  100ms延时程序  *********/
 195          void Delay100ms()   //@11.0592MHz
 196          {
 197   1        unsigned char data i, j, k;
 198   1      
 199   1        _nop_();
 200   1        i = 6;
 201   1        j = 157;
 202   1        k = 59;
 203   1        do
 204   1        {
 205   2          do
 206   2          {
 207   3            while (--k);
 208   3          } while (--j);
 209   2        } while (--i);
 210   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    704    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
